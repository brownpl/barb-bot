# This is a basic workflow to help you get started with Actions

name: Build it and Ship It
env:
  path: ${{ secrets.BOT_PATH }}
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Zip it Up
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r release.zip ./ -x package-lock.json -x .git/*

    - name: Save the artifact
      uses: actions/upload-artifact@v1
      with:
        name: release
        path: release.zip

  deploy: 
    needs: build
    runs-on: ubuntu-18.04

    steps:

    - uses: actions/download-artifact@v1
      with:
        name: release
        path: release.zip

    - name: Move the file to the server
      uses: appleboy/scp-action@v0.0.7
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        KEY: ${{ secrets.KEY }}
      with:
        source: "release.zip"
        target: "deploy/"

    - name: Deploy
      uses: appleboy/ssh-action@v0.0.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          mkdir -p ${{ env.path }}
          unzip ~/deploy/release.zip/release.zip -d ${{ env.path }}
          cd ${{ env.path }}
          npm run start
          rm -rf ~/deploy
